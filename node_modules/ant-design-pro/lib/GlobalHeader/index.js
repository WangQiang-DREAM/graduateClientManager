'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _spin = require('antd/lib/spin');

var _spin2 = _interopRequireDefault(_spin);

var _dropdown = require('antd/lib/dropdown');

var _dropdown2 = _interopRequireDefault(_dropdown);

var _avatar = require('antd/lib/avatar');

var _avatar2 = _interopRequireDefault(_avatar);

var _icon = require('antd/lib/icon');

var _icon2 = _interopRequireDefault(_icon);

var _menu = require('antd/lib/menu');

var _menu2 = _interopRequireDefault(_menu);

var _tag = require('antd/lib/tag');

var _tag2 = _interopRequireDefault(_tag);

var _message2 = require('antd/lib/message');

var _message3 = _interopRequireDefault(_message2);

var _layout = require('antd/lib/layout');

var _layout2 = _interopRequireDefault(_layout);

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _dec, _desc, _value, _class;

require('antd/lib/spin/style/css');

require('antd/lib/dropdown/style/css');

require('antd/lib/avatar/style/css');

require('antd/lib/icon/style/css');

require('antd/lib/menu/style/css');

require('antd/lib/tag/style/css');

require('antd/lib/message/style/css');

require('antd/lib/layout/style/css');

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _moment = require('moment');

var _moment2 = _interopRequireDefault(_moment);

var _groupBy = require('lodash/groupBy');

var _groupBy2 = _interopRequireDefault(_groupBy);

var _debounce = require('lodash-decorators/debounce');

var _debounce2 = _interopRequireDefault(_debounce);

var _NoticeIcon = require('../../components/NoticeIcon');

var _NoticeIcon2 = _interopRequireDefault(_NoticeIcon);

var _HeaderSearch = require('../../components/HeaderSearch');

var _HeaderSearch2 = _interopRequireDefault(_HeaderSearch);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) {
  var desc = {};
  Object['ke' + 'ys'](descriptor).forEach(function (key) {
    desc[key] = descriptor[key];
  });
  desc.enumerable = !!desc.enumerable;
  desc.configurable = !!desc.configurable;

  if ('value' in desc || desc.initializer) {
    desc.writable = true;
  }

  desc = decorators.slice().reverse().reduce(function (desc, decorator) {
    return decorator(target, property, desc) || desc;
  }, desc);

  if (context && desc.initializer !== void 0) {
    desc.value = desc.initializer ? desc.initializer.call(context) : void 0;
    desc.initializer = undefined;
  }

  if (desc.initializer === void 0) {
    Object['define' + 'Property'](target, property, desc);
    desc = null;
  }

  return desc;
}

var styles = {
  'header': 'antd-pro-global-header-header',
  'ant-layout': 'antd-pro-global-header-ant-layout',
  'menu': 'antd-pro-global-header-menu',
  'trigger': 'antd-pro-global-header-trigger',
  'right': 'antd-pro-global-header-right',
  'action': 'antd-pro-global-header-action',
  'search': 'antd-pro-global-header-search',
  'account': 'antd-pro-global-header-account',
  'avatar': 'antd-pro-global-header-avatar'
};
var Header = _layout2.default.Header;
var GlobalHeader = (_dec = (0, _debounce2.default)(600), (_class = function (_PureComponent) {
  _inherits(GlobalHeader, _PureComponent);

  function GlobalHeader() {
    var _ref;

    var _temp, _this, _ret;

    _classCallCheck(this, GlobalHeader);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = GlobalHeader.__proto__ || Object.getPrototypeOf(GlobalHeader)).call.apply(_ref, [this].concat(args))), _this), _this.handleNoticeClear = function (type) {
      _message3.default.success('\u6E05\u7A7A\u4E86' + type);
      _this.props.dispatch({
        type: 'global/clearNotices',
        payload: type
      });
    }, _this.handleNoticeVisibleChange = function (visible) {
      if (visible) {
        _this.props.dispatch({
          type: 'global/fetchNotices'
        });
      }
    }, _this.handleMenuClick = function (_ref2) {
      var key = _ref2.key;

      if (key === 'logout') {
        _this.props.dispatch({
          type: 'login/logout'
        });
      }
    }, _this.toggle = function () {
      var collapsed = _this.props.collapsed;

      _this.props.dispatch({
        type: 'global/changeLayoutCollapsed',
        payload: !collapsed
      });
      _this.triggerResizeEvent();
    }, _temp), _possibleConstructorReturn(_this, _ret);
  }

  _createClass(GlobalHeader, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      this.props.dispatch({
        type: 'user/fetchCurrent'
      });
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      this.triggerResizeEvent.cancel();
    }
  }, {
    key: 'getNoticeData',
    value: function getNoticeData() {
      var _props$notices = this.props.notices,
          notices = _props$notices === undefined ? [] : _props$notices;

      if (notices.length === 0) {
        return {};
      }
      var newNotices = notices.map(function (notice) {
        var newNotice = _extends({}, notice);
        if (newNotice.datetime) {
          newNotice.datetime = (0, _moment2.default)(notice.datetime).fromNow();
        }
        // transform id to item key
        if (newNotice.id) {
          newNotice.key = newNotice.id;
        }
        if (newNotice.extra && newNotice.status) {
          var color = {
            todo: '',
            processing: 'blue',
            urgent: 'red',
            doing: 'gold'
          }[newNotice.status];
          newNotice.extra = _react2.default.createElement(
            _tag2.default,
            { color: color, style: { marginRight: 0 } },
            newNotice.extra
          );
        }
        return newNotice;
      });
      return (0, _groupBy2.default)(newNotices, 'type');
    }
  }, {
    key: 'triggerResizeEvent',
    value: function triggerResizeEvent() {
      // eslint-disable-line
      var event = document.createEvent('HTMLEvents');
      event.initEvent('resize', true, false);
      window.dispatchEvent(event);
    }
  }, {
    key: 'render',
    value: function render() {
      var _props = this.props,
          currentUser = _props.currentUser,
          collapsed = _props.collapsed,
          fetchingNotices = _props.fetchingNotices;

      var menu = _react2.default.createElement(
        _menu2.default,
        { className: styles.menu, selectedKeys: [], onClick: this.handleMenuClick },
        _react2.default.createElement(
          _menu2.default.Item,
          { disabled: true },
          _react2.default.createElement(_icon2.default, { type: 'user' }),
          '\u4E2A\u4EBA\u4E2D\u5FC3'
        ),
        _react2.default.createElement(
          _menu2.default.Item,
          { disabled: true },
          _react2.default.createElement(_icon2.default, { type: 'setting' }),
          '\u8BBE\u7F6E'
        ),
        _react2.default.createElement(_menu2.default.Divider, null),
        _react2.default.createElement(
          _menu2.default.Item,
          { key: 'logout' },
          _react2.default.createElement(_icon2.default, { type: 'logout' }),
          '\u9000\u51FA\u767B\u5F55'
        )
      );
      var noticeData = this.getNoticeData();
      return _react2.default.createElement(
        Header,
        { className: styles.header },
        _react2.default.createElement(_icon2.default, {
          className: styles.trigger,
          type: collapsed ? 'menu-unfold' : 'menu-fold',
          onClick: this.toggle
        }),
        _react2.default.createElement(
          'div',
          { className: styles.right },
          _react2.default.createElement(_HeaderSearch2.default, {
            className: styles.action + ' ' + styles.search,
            placeholder: '\u7AD9\u5185\u641C\u7D22',
            dataSource: ['搜索提示一', '搜索提示二', '搜索提示三'],
            onSearch: function onSearch(value) {
              console.log('input', value); // eslint-disable-line
            },
            onPressEnter: function onPressEnter(value) {
              console.log('enter', value); // eslint-disable-line
            }
          }),
          _react2.default.createElement(
            _NoticeIcon2.default,
            {
              className: styles.action,
              count: currentUser.notifyCount,
              onItemClick: function onItemClick(item, tabProps) {
                console.log(item, tabProps); // eslint-disable-line
              },
              onClear: this.handleNoticeClear,
              onPopupVisibleChange: this.handleNoticeVisibleChange,
              loading: fetchingNotices,
              popupAlign: { offset: [20, -16] }
            },
            _react2.default.createElement(_NoticeIcon2.default.Tab, {
              list: noticeData['通知'],
              title: '\u901A\u77E5',
              emptyText: '\u4F60\u5DF2\u67E5\u770B\u6240\u6709\u901A\u77E5',
              emptyImage: 'https://gw.alipayobjects.com/zos/rmsportal/wAhyIChODzsoKIOBHcBk.svg'
            }),
            _react2.default.createElement(_NoticeIcon2.default.Tab, {
              list: noticeData['消息'],
              title: '\u6D88\u606F',
              emptyText: '\u60A8\u5DF2\u8BFB\u5B8C\u6240\u6709\u6D88\u606F',
              emptyImage: 'https://gw.alipayobjects.com/zos/rmsportal/sAuJeJzSKbUmHfBQRzmZ.svg'
            }),
            _react2.default.createElement(_NoticeIcon2.default.Tab, {
              list: noticeData['待办'],
              title: '\u5F85\u529E',
              emptyText: '\u4F60\u5DF2\u5B8C\u6210\u6240\u6709\u5F85\u529E',
              emptyImage: 'https://gw.alipayobjects.com/zos/rmsportal/HsIsxMZiWKrNUavQUXqx.svg'
            })
          ),
          currentUser.name ? _react2.default.createElement(
            _dropdown2.default,
            { overlay: menu },
            _react2.default.createElement(
              'span',
              { className: styles.action + ' ' + styles.account },
              _react2.default.createElement(_avatar2.default, { size: 'small', className: styles.avatar, src: currentUser.avatar }),
              currentUser.name
            )
          ) : _react2.default.createElement(_spin2.default, { size: 'small', style: { marginLeft: 8 } })
        )
      );
    }
  }]);

  return GlobalHeader;
}(_react.PureComponent), (_applyDecoratedDescriptor(_class.prototype, 'triggerResizeEvent', [_dec], Object.getOwnPropertyDescriptor(_class.prototype, 'triggerResizeEvent'), _class.prototype)), _class));
exports.default = GlobalHeader;
module.exports = exports['default'];