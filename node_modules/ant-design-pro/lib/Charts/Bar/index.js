'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _dec, _dec2, _desc, _value, _class;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _g = require('g2');

var _g2 = _interopRequireDefault(_g);

var _debounce = require('lodash-decorators/debounce');

var _debounce2 = _interopRequireDefault(_debounce);

var _bind = require('lodash-decorators/bind');

var _bind2 = _interopRequireDefault(_bind);

var _equal = require('../equal');

var _equal2 = _interopRequireDefault(_equal);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) {
  var desc = {};
  Object['ke' + 'ys'](descriptor).forEach(function (key) {
    desc[key] = descriptor[key];
  });
  desc.enumerable = !!desc.enumerable;
  desc.configurable = !!desc.configurable;

  if ('value' in desc || desc.initializer) {
    desc.writable = true;
  }

  desc = decorators.slice().reverse().reduce(function (desc, decorator) {
    return decorator(target, property, desc) || desc;
  }, desc);

  if (context && desc.initializer !== void 0) {
    desc.value = desc.initializer ? desc.initializer.call(context) : void 0;
    desc.initializer = undefined;
  }

  if (desc.initializer === void 0) {
    Object['define' + 'Property'](target, property, desc);
    desc = null;
  }

  return desc;
}

var styles = {
  'miniChart': 'antd-pro-charts-miniChart',
  'chartContent': 'antd-pro-charts-chartContent',
  'chartLoading': 'antd-pro-charts-chartLoading'
};
var Bar = (_dec = (0, _bind2.default)(), _dec2 = (0, _debounce2.default)(200), (_class = function (_PureComponent) {
  _inherits(Bar, _PureComponent);

  function Bar() {
    var _ref;

    var _temp, _this, _ret;

    _classCallCheck(this, Bar);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Bar.__proto__ || Object.getPrototypeOf(Bar)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
      autoHideXLabels: false
    }, _this.handleRef = function (n) {
      _this.node = n;
    }, _temp), _possibleConstructorReturn(_this, _ret);
  }

  _createClass(Bar, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      this.renderChart(this.props.data);

      window.addEventListener('resize', this.resize);
    }
  }, {
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(nextProps) {
      if (!(0, _equal2.default)(this.props, nextProps)) {
        this.renderChart(nextProps.data);
      }
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      window.removeEventListener('resize', this.resize);
      if (this.chart) {
        this.chart.destroy();
      }
      this.resize.cancel();
    }
  }, {
    key: 'resize',
    value: function resize() {
      if (!this.node) {
        return;
      }
      var canvasWidth = this.node.parentNode.clientWidth;
      var _props = this.props,
          _props$data = _props.data,
          data = _props$data === undefined ? [] : _props$data,
          _props$autoLabel = _props.autoLabel,
          autoLabel = _props$autoLabel === undefined ? true : _props$autoLabel;

      if (!autoLabel) {
        return;
      }
      var minWidth = data.length * 30;
      var autoHideXLabels = this.state.autoHideXLabels;


      if (canvasWidth <= minWidth) {
        if (!autoHideXLabels) {
          this.setState({
            autoHideXLabels: true
          });
          this.renderChart(data);
        }
      } else if (autoHideXLabels) {
        this.setState({
          autoHideXLabels: false
        });
        this.renderChart(data);
      }
    }
  }, {
    key: 'renderChart',
    value: function renderChart(data) {
      var autoHideXLabels = this.state.autoHideXLabels;
      var _props2 = this.props,
          _props2$height = _props2.height,
          height = _props2$height === undefined ? 0 : _props2$height,
          _props2$fit = _props2.fit,
          fit = _props2$fit === undefined ? true : _props2$fit,
          _props2$color = _props2.color,
          color = _props2$color === undefined ? 'rgba(24, 144, 255, 0.85)' : _props2$color,
          _props2$margin = _props2.margin,
          margin = _props2$margin === undefined ? [32, 0, autoHideXLabels ? 8 : 32, 40] : _props2$margin;


      if (!data || data && data.length < 1) {
        return;
      }

      // clean
      this.node.innerHTML = '';

      var Frame = _g2.default.Frame;

      var frame = new Frame(data);

      var chart = new _g2.default.Chart({
        container: this.node,
        forceFit: fit,
        height: height - 22,
        legend: null,
        plotCfg: {
          margin: margin
        }
      });

      if (autoHideXLabels) {
        chart.axis('x', {
          title: false,
          tickLine: false,
          labels: false
        });
      } else {
        chart.axis('x', {
          title: false
        });
      }
      chart.axis('y', {
        title: false,
        line: false,
        tickLine: false
      });

      chart.source(frame, {
        x: {
          type: 'cat'
        },
        y: {
          min: 0
        }
      });

      chart.tooltip({
        title: null,
        crosshairs: false,
        map: {
          name: 'x'
        }
      });
      chart.interval().position('x*y').color(color).style({
        fillOpacity: 1
      });
      chart.render();

      this.chart = chart;
    }
  }, {
    key: 'render',
    value: function render() {
      var _props3 = this.props,
          height = _props3.height,
          title = _props3.title;


      return _react2.default.createElement(
        'div',
        { className: styles.chart, style: { height: height } },
        _react2.default.createElement(
          'div',
          null,
          title && _react2.default.createElement(
            'h4',
            null,
            title
          ),
          _react2.default.createElement('div', { ref: this.handleRef })
        )
      );
    }
  }]);

  return Bar;
}(_react.PureComponent), (_applyDecoratedDescriptor(_class.prototype, 'resize', [_dec, _dec2], Object.getOwnPropertyDescriptor(_class.prototype, 'resize'), _class.prototype)), _class));
exports.default = Bar;
module.exports = exports['default'];